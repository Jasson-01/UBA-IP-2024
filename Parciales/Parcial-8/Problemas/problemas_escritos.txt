Proble-1) ##############ATENCION POR GUARDIA##############################

Desde el Hospital Fernandez nos pidieron solucionar una serie de problemas relacionados con la informacion que maneja sobre los pacientes y el personal de salud.En primer lugar debemos resolver en que orden se deben atender los pacientes que llegan a la guardia. En enfermeria, hay una primera instancia que clasifica en dos colas a los pacientes: una urgente y otra postergable (esto se llama hacer triage). A partir de dichas colas que contienen la identificacion del paciente, se pide devolver una nueva cola segun la siguiente especificacion.

problema orden_de_atencion(in urgentes:cola<Z>,in postergables:cola<Z>):cola<Z>{
   requiere:{no hay elementos repetidos en urgentes}
   requiere:{no hay elementos repetidos en postergables}
   requiere:{la interseccion entre postergable y urgentes es vacia}
   asegura:{|postergables| = |urgentes|}
   asegura:{res es permutacion de la  concatenacion de urgentes y postergables}
   asegura:{si urgentes no es vacia, en tope de res hay un elemento de urgentes}
   asegura:{en res no hay dos seguidos de urgentes}
   asegura:{en res no hay dos seguidos de postergables}
   asegura:{Para todo C1 y C2 de tipo "urgente" pertenecientes a urgentes si C1 aparece antes que C2 en urgentes    entonces C1 aparece antes que C2 en res}
   asegura:{Para todo C1 y C2 de tipo "postergable" pertenecientes a postergables si C1 aparece antes que C2 en    postergables entonces C1 aparece antes que C2 en res}

Proble-2) ##################ALARMA EPIDEMILOGICA##############################

Necesitamos detectar la aparicion de posibles epidemias. Para esto contamos con una lista de enfermedades infecciosas y los registros de atencion por guardia dados por una lista expedientes. Cada expediente es una tupla con 	ID  paciente y enfermedad que motivo la atencion.Debemos devolver un diccionario cuya clave son las enfermedades infecciosas y su valor es la proporcion de pacientes que se atendieron por esa enfermedad.En este diccionario deben aparecer solo aquella enfermedades infecciosas cuya proporcion supere cierto umbral.

problema alarma_epidemiologica(registros:seq<ZxString>,infecciosas:seq<String>,umbral:R):dict<String,R>{
   requiere:{0 <umbral< 1}
   asegura:{claves de res pertenecen a infecciosas}
   asegura:{Para cada enfermedad perteneciente a infecciosas, si el porcentaje de pacientes que se atendieron por esa    enfermedad sobre el total de registros es mayor o igual al umbral,entoces res[enfermedad]=porcentaje}
   asegura:{Para cada enfermedad perteneciente a infecciosas, si el porcentaje de pacientes que se atendieron por esa    enfermedad sobre el total de registros es menor que el umbral, entonces enfermedad no aparece en res}
  }

Proble-3) ################EMPLEADOS DEL MES##################################

Dado un diccionario con la cantidad de horas trabajadas por empleado, en donde la clave es el ID del empleado y el valor es una lista de las horas trabajadas por dia, queremos saber quienes trabajaron mas para darles un premio. Se debera buscar la o las claves para la cual se tiene el maximo valor de cantidad total de horas, y devolverlas en una lista.

problema empleados_del_mes(horas:dicc<Z,seq<Z>>):seq<Z>{
   requiere:{No hay valores en horas que sean listas vacias}
   asegura:{Si ID pertenece a res entonces ID pertenece a las claves de horas}
   asegura:{Si ID pertenece a res, la suma de sus valores de horas es el maximo de la suma de elementos de horas de      todos los otros IDs} 
   asegura:{Para todo ID de claves de horas, si la suma de sus valores es el maximo de la suma de elementos de horas    de los otros IDs, entonces ID pertenece a res }

Proble-4) ##########NIVEL DE OCUPACION DEL HOSPITAL##########################

Queremos saber que porcentaje de ocupacion de camas hay en el hospital. El hospital se representa por una matriz en donde las filas son los pisos, y las columnas son las camas.Los valores de la matriz son booleanos que indican si la cama esta ocupada o no. Si el valor es verdadero (True) indica que la cama esta ocupada.Se nos pide programar en Python una funcion que devuelve una secuencia de enteros, indicando la proporcion de camas ocupadas en cada piso.

problema nivel_de_ocupacion(camas_por_piso:seq<seq<Bool>>):seq<R>{
    requiere:{Todos los pisos tienen la misma cantidad de camas.}
    requiere:{Hay por lo menos 1 piso en el hospital.}
    requiere:{Hay por lo menos una cama por piso.}
    asegura:{|res| = |camas|}
    asegura:{Para todo 0 <= i < |res| se cumple que res[i] es igual a la cantidad de camas ocupadas del piso i dividido     el total de camas del piso i}
    }
